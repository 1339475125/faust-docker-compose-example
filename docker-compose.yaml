version: '3'
services:
  faust-project:
    tty: true
    build: ./faust-project
    command: ./run.sh
    depends_on:
      - zookeeper
      - kafka
      # - "schema-registry"
    environment:
      - WORKER=example
      - WORKER_PORT=6066
      - CONFIG_CLASS=video
      - PROJECT_SETTINGS=settings.ini
      - CONFLUENT_BOOSTRAP_SERVERS=kafka://kafka:9092
      - CONFLUENT_SCHEMA_REGISTRY_URL=http://schema-registry:8081
    volumes:
      - ./settings.ini:/faust-project/settings.ini
    ports:
      - "8084:80"
      - "8000:8000"
  zookeeper:
    image: "confluentinc/cp-zookeeper"
    hostname: zookeeper
    ports:
      - 32181:32181
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
    - 9092:9092
    - 29092:29092
    depends_on:
    - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://localhost:29092,PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
    # healthcheck:
    #     test: ["CMD", "curl", "-f", "http://localhost:9092"]
    #     interval: 30s
    #     timeout: 10s
    #     retries: 5
  # schema-registry:
  #   image: confluentinc/cp-schema-registry
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:32181
  #     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
  #     - SCHEMA_REGISTRY_DEBUG=true

